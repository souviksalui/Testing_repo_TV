<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Chedckout Page Group">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Addressgetbyuserid Request" enabled="true">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/addressGetByUserId</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;sortFilter&quot;:{&quot;_id&quot;:-1},&quot;size&quot;:1,&quot;pageNo&quot;:1,&quot;filter&quot;:{}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiNzQ3NzcxMzQxMCIsImlhdCI6MTc1OTI5MjAxNiwiZXhwIjoxNzYxOTcwNDE2fQ.kzr3usENShTK6I8HTf--VTfQwJMAgln-uRDJLL5Hyus</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getuser Request" enabled="true">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/getUser</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiNzQ3NzcxMzQxMCIsImlhdCI6MTc1OTI5MjAxNiwiZXhwIjoxNzYxOTcwNDE2fQ.kzr3usENShTK6I8HTf--VTfQwJMAgln-uRDJLL5Hyus</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="States Request" enabled="true">
          <stringProp name="HTTPSampler.domain">testingenv-2021.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/assets/data/states.json</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Checkoutinitevt Request" enabled="true">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/checkoutInitEvt</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;products&quot;:[&quot;SD-KK-2021751&quot;,&quot;DU-CM-20211928&quot;,&quot;DU-CM-20211951&quot;],&quot;actualPrice&quot;:20941}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiNzQ3NzcxMzQxMCIsImlhdCI6MTc1OTI5MjAxNiwiZXhwIjoxNzYxOTcwNDE2fQ.kzr3usENShTK6I8HTf--VTfQwJMAgln-uRDJLL5Hyus</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cartbyuser Request">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/cartGetByUser/675ff9d7ba53363113513a63</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;oCrt&quot;:&quot;675ff9d9ba53363113513a64&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoiNzQ3NzcxMzQxMCIsImlhdCI6MTc1OTI5MjAxNiwiZXhwIjoxNzYxOTcwNDE2fQ.kzr3usENShTK6I8HTf--VTfQwJMAgln-uRDJLL5Hyus</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="coin redeemption Request">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/rvCoinRedemption</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate COD charges Request">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/calculateCodCharges/19080</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="pincode avail check Request">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/checkAvail/713205/1</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;phoneNumber&quot;:&quot;7477713410&quot;,&quot;email&quot;:&quot;puja.halder@toolsvilla.com&quot;,&quot;products&quot;:[{&quot;id&quot;:&quot;605574f65b902454582063a3&quot;,&quot;selSubPrd&quot;:null},{&quot;id&quot;:&quot;614977717559b12c1f30a7aa&quot;,&quot;selSubPrd&quot;:null},{&quot;id&quot;:&quot;614ae91950b7394ebe7c2fc9&quot;,&quot;selSubPrd&quot;:null}],&quot;cartAmount&quot;:21260}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cartcreate Request">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/web/cartsCreate</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;_id&quot;:&quot;675ff9d9ba53363113513a64&quot;,&quot;products&quot;:[{&quot;productId&quot;:&quot;605574f65b902454582063a3&quot;,&quot;quantity&quot;:1,&quot;categories&quot;:[&quot;5d60467d5012501e0c6f6c65&quot;,&quot;5d6046955012501e0c6f6c82&quot;,&quot;5d6045645012501e0c6f6b5c&quot;],&quot;section&quot;:&quot;product&quot;,&quot;url&quot;:&quot;/kisankraft-kk-csp-6122-petrol-chainsaw-22-inch-58cc&quot;},{&quot;productId&quot;:&quot;614977717559b12c1f30a7aa&quot;,&quot;quantity&quot;:1,&quot;categories&quot;:[&quot;5d6046295012501e0c6f6c0a&quot;,&quot;5d6046075012501e0c6f6bec&quot;,&quot;5d60462b5012501e0c6f6c0c&quot;],&quot;section&quot;:&quot;product&quot;,&quot;url&quot;:&quot;/mini-marvel-ii-self-priming-monoblock-water-pump&quot;},{&quot;productId&quot;:&quot;614ae91950b7394ebe7c2fc9&quot;,&quot;quantity&quot;:1,&quot;categories&quot;:[&quot;5d6046295012501e0c6f6c0a&quot;,&quot;5d6046075012501e0c6f6bec&quot;,&quot;5d60462b5012501e0c6f6c0c&quot;],&quot;section&quot;:&quot;product&quot;,&quot;url&quot;:&quot;/self-priming-monoblock-pump-1hp-mini-chrome-i&quot;}],&quot;userId&quot;:&quot;675ff9d7ba53363113513a63&quot;,&quot;couponCode&quot;:null,&quot;lead&quot;:1,&quot;zipcode&quot;:&quot;713213&quot;,&quot;callOptIn&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rPayFullPayment Request">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/micro/order/rPayFullPayment?sd=1</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;userId&quot;:{&quot;_id&quot;:&quot;675ff9d7ba53363113513a63&quot;,&quot;email&quot;:&quot;puja.halder@toolsvilla.com&quot;,&quot;firstname&quot;:&quot;Test&quot;,&quot;lastname&quot;:&quot;&quot;,&quot;mobileno&quot;:&quot;7477713410&quot;,&quot;tvPoints&quot;:0,&quot;interest&quot;:[&quot;6274d452eeca865f2b40b893&quot;,&quot;6274d7a2eeca865f2b40bd48&quot;],&quot;newQues&quot;:false,&quot;pop&quot;:[{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de79020&quot;,&quot;name&quot;:&quot;Test 05-05-2025&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901f&quot;,&quot;name&quot;:&quot;For Furniture Making at Home&quot;,&quot;mainPop&quot;:&quot;🧰 Personal / DIY Use&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901e&quot;,&quot;name&quot;:&quot;For Construction / Civil Work&quot;,&quot;mainPop&quot;:&quot;🛠️ Professional Use&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901d&quot;,&quot;name&quot;:&quot;For Gifting to Skilled Professional&quot;,&quot;mainPop&quot;:&quot;🌱 Gardening&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901c&quot;,&quot;name&quot;:&quot;For Carpentry / Woodworking Business&quot;,&quot;mainPop&quot;:&quot;🌱 Gardening&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901b&quot;,&quot;name&quot;:&quot;For Terrace / Balcony Gardening&quot;,&quot;mainPop&quot;:&quot;🌱 Gardening&quot;}]},&quot;shippingAddress&quot;:{&quot;_id&quot;:null,&quot;userId&quot;:null,&quot;__v&quot;:0,&quot;firstName&quot;:&quot;Test&quot;,&quot;email&quot;:&quot;puja.halder@toolsvilla.com&quot;,&quot;phoneNumber&quot;:&quot;7477713410&quot;,&quot;alternativePhoneNumber&quot;:&quot;&quot;,&quot;country&quot;:&quot;India&quot;,&quot;city&quot;:&quot;Durgapur&quot;,&quot;state&quot;:&quot;West Bengal&quot;,&quot;zipcode&quot;:&quot;713205&quot;,&quot;landmark&quot;:&quot;&quot;,&quot;lnd&quot;:&quot;test&quot;,&quot;address&quot;:&quot;test, test&quot;,&quot;areaColony&quot;:&quot;test&quot;,&quot;selectedAddress&quot;:&quot;new&quot;},&quot;products&quot;:[{&quot;productId&quot;:{&quot;_id&quot;:&quot;5daf3293416c9024a4fc528e&quot;},&quot;quantity&quot;:2,&quot;section&quot;:&quot;Recently Viewed Products &gt; product&quot;,&quot;url&quot;:&quot;/petrol-brush-cutter-4stroke&quot;},{&quot;productId&quot;:{&quot;_id&quot;:&quot;60100ffecba6e679367e44e9&quot;},&quot;quantity&quot;:1,&quot;section&quot;:&quot;product&quot;,&quot;url&quot;:&quot;/double-barrel-manual-seeder-cum-fertilizer&quot;}],&quot;callOptIn&quot;:true,&quot;shippingPrice&quot;:0,&quot;isNE&quot;:null,&quot;paymentMethod&quot;:&quot;online&quot;,&quot;orderType&quot;:&quot;org&quot;,&quot;tvFlag&quot;:false,&quot;otpCount&quot;:1,&quot;couponCode&quot;:null,&quot;referal&quot;:{&quot;by&quot;:&quot;testingenv-2021.toolsvilla.in&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="justpay  Request" enabled="false">
          <stringProp name="HTTPSampler.domain">sandbox.assets.juspay.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">mpm/toolsvilla.json</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="justpay savepayment methods Request" enabled="false">
          <stringProp name="HTTPSampler.domain">sandbox.assets.juspay.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/wapi/sdk/v1/savedPaymentMethods?customer_id=675ff9d7ba53363113513a63&amp;client_auth_token=tkn_b33d28da97cc47a094aa2d8d16e6c0cc&amp;offers=true&amp;refresh=false&amp;mandate_feature=optional&amp;add_emandate_payment_methods=true&amp;add_preferred_payment_methods=false&amp;supported_reference_ids_feature=true&amp;add_tpv_payment_method=false&amp;add_surcharge_logic=true&amp;add_nick_name=true&amp;add_supported_features=true&amp;add_default_reference_id=true&amp;check_cvv_less_support=true&amp;add_virtual_accounts=false&amp;order_id=ref-358080_j9e9&amp;check_direct_otp_support=true&amp;check_rewards_support=true&amp;add_customized_pm=false</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="txn Request" enabled="false">
          <stringProp name="HTTPSampler.domain">sandbox.assets.juspay.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/wapi/txns</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="redirect_after_payment" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">redirect_after_payment</stringProp>
              </elementProp>
              <elementProp name="payment_method_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">NB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">payment_method_type</stringProp>
              </elementProp>
              <elementProp name="payment_method" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">NB_HDFC</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">payment_method</stringProp>
              </elementProp>
              <elementProp name="payment_channel" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">MWEB</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">payment_channel</stringProp>
              </elementProp>
              <elementProp name="order_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">ref-358080_j9e9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">order_id</stringProp>
              </elementProp>
              <elementProp name="metadata" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;pp_mode&quot;:&quot;RELEASE&quot;,&quot;payment_channel&quot;:&quot;MWEB&quot;,&quot;microapp&quot;:&quot;hyperpay&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">metadata</stringProp>
              </elementProp>
              <elementProp name="merchant_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">toolsvilla</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">merchant_id</stringProp>
              </elementProp>
              <elementProp name="format" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">format</stringProp>
              </elementProp>
              <elementProp name="client_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">WEB_POP_UP</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_type</stringProp>
              </elementProp>
              <elementProp name="client_auth_token" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">tkn_b33d28da97cc47a094aa2d8d16e6c0cc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_auth_token</stringProp>
              </elementProp>
              <elementProp name="additional_payment_details" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">[]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">additional_payment_details</stringProp>
              </elementProp>
              <elementProp name="add_merchant_return_url" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">add_merchant_return_url</stringProp>
              </elementProp>
              <elementProp name="payment_page_client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">toolsvilla</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">payment_page_client_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ordercreateupdate Request" enabled="false">
          <stringProp name="HTTPSampler.domain">api.toolsvilla.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/micro/order/ordersCreateUpdate?sd=1</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;userId&quot;:{&quot;_id&quot;:&quot;675ff9d7ba53363113513a63&quot;,&quot;email&quot;:&quot;puja.halder@toolsvilla.com&quot;,&quot;firstname&quot;:&quot;Test&quot;,&quot;lastname&quot;:&quot;&quot;,&quot;mobileno&quot;:&quot;7477713410&quot;,&quot;tvPoints&quot;:0,&quot;interest&quot;:[&quot;6274d452eeca865f2b40b893&quot;,&quot;6274d7a2eeca865f2b40bd48&quot;],&quot;newQues&quot;:false,&quot;pop&quot;:[{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de79020&quot;,&quot;name&quot;:&quot;Test 05-05-2025&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901f&quot;,&quot;name&quot;:&quot;For Furniture Making at Home&quot;,&quot;mainPop&quot;:&quot;🧰 Personal / DIY Use&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901e&quot;,&quot;name&quot;:&quot;For Construction / Civil Work&quot;,&quot;mainPop&quot;:&quot;🛠️ Professional Use&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901d&quot;,&quot;name&quot;:&quot;For Gifting to Skilled Professional&quot;,&quot;mainPop&quot;:&quot;🌱 Gardening&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901c&quot;,&quot;name&quot;:&quot;For Carpentry / Woodworking Business&quot;,&quot;mainPop&quot;:&quot;🌱 Gardening&quot;},{&quot;isOther&quot;:false,&quot;_id&quot;:&quot;68c3f3d23298300a0de7901b&quot;,&quot;name&quot;:&quot;For Terrace / Balcony Gardening&quot;,&quot;mainPop&quot;:&quot;🌱 Gardening&quot;}]},&quot;shippingAddress&quot;:{&quot;_id&quot;:null,&quot;userId&quot;:null,&quot;__v&quot;:0,&quot;firstName&quot;:&quot;Test&quot;,&quot;email&quot;:&quot;puja.halder@toolsvilla.com&quot;,&quot;phoneNumber&quot;:&quot;7477713410&quot;,&quot;alternativePhoneNumber&quot;:&quot;&quot;,&quot;country&quot;:&quot;India&quot;,&quot;city&quot;:&quot;Durgapur&quot;,&quot;state&quot;:&quot;West Bengal&quot;,&quot;zipcode&quot;:&quot;713208&quot;,&quot;landmark&quot;:&quot;&quot;,&quot;lnd&quot;:&quot;test&quot;,&quot;address&quot;:&quot;test, test&quot;,&quot;areaColony&quot;:&quot;test&quot;,&quot;selectedAddress&quot;:&quot;new&quot;},&quot;products&quot;:[{&quot;productId&quot;:{&quot;_id&quot;:&quot;614977717559b12c1f30a7aa&quot;},&quot;quantity&quot;:1,&quot;section&quot;:&quot;product&quot;,&quot;url&quot;:&quot;/mini-marvel-ii-self-priming-monoblock-water-pump&quot;},{&quot;productId&quot;:{&quot;_id&quot;:&quot;614ae91950b7394ebe7c2fc9&quot;},&quot;quantity&quot;:1,&quot;section&quot;:&quot;product&quot;,&quot;url&quot;:&quot;/self-priming-monoblock-pump-1hp-mini-chrome-i&quot;}],&quot;callOptIn&quot;:true,&quot;shippingPrice&quot;:0,&quot;isNE&quot;:null,&quot;paymentMethod&quot;:&quot;COD&quot;,&quot;orderType&quot;:&quot;aotp&quot;,&quot;tvFlag&quot;:false,&quot;otpCount&quot;:2,&quot;couponCode&quot;:null,&quot;referal&quot;:{&quot;by&quot;:&quot;testingenv-2021.toolsvilla.in&quot;},&quot;_id&quot;:&quot;68df4f64320ed830a2ae0e22&quot;,&quot;orderId&quot;:&quot;ref-358084&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
